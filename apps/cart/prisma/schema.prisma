generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model carts {
  id                 Int              @id @default(autoincrement())
  customer_id        Int?
  product_id         Int?
  product_variant_id Int?
  customers          customers?       @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products           products?        @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product_variant    product_variant? @relation(fields: [product_variant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model categories {
  id               Int          @id @default(autoincrement())
  name             String       @db.VarChar(50)
  slug             String       @unique @db.VarChar(255)
  parent_id        Int?
  active           Boolean      @default(true)
  created_at       DateTime?    @default(now()) @db.Timestamp(6)
  updated_at       DateTime?    @default(now()) @db.Timestamp(6)
  categories       categories?  @relation("categoriesTocategories", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_categories categories[] @relation("categoriesTocategories")
  products         products[]
}

model customers {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(50)
  email      String    @db.VarChar(50)
  password   String    @db.VarChar(255)
  status     Int       @default(1)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  carts      carts[]
  orders     orders[]
}

model order_items {
  id                 Int              @id @default(autoincrement())
  order_id           String?          @db.Uuid
  product_id         Int?
  product_variant_id Int?
  prodcut_name       String?          @db.VarChar(255)
  color              String?          @db.VarChar(20)
  price              Float?
  quantity           Int?
  total_amount       Float?
  orders             orders?          @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction)
  products           products?        @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product_variant    product_variant? @relation(fields: [product_variant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id               Int                   @id @default(autoincrement())
  order_id         String?               @unique(map: "order_id") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id      Int?
  total_amount     Float?
  shipping_charges Float?
  status           delivery_status_enum?
  order_items      order_items[]
  customers        customers?            @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model product_variant {
  id             Int           @id @default(autoincrement())
  product_id     Int
  name           String        @db.VarChar(255)
  slug           String        @unique @db.VarChar(255)
  description    String?
  price          Decimal       @db.Decimal(10, 2)
  stock_quantity Int           @default(0)
  created_at     DateTime?     @default(now()) @db.Timestamp(6)
  updated_at     DateTime?     @default(now()) @db.Timestamp(6)
  color          String        @db.VarChar(20)
  carts          carts[]
  order_items    order_items[]
  products       products      @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model products {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  slug            String            @unique @db.VarChar(255)
  description     String?
  price           Decimal           @db.Decimal(10, 2)
  stock_quantity  Int               @default(0)
  created_at      DateTime?         @default(now()) @db.Timestamp(6)
  updated_at      DateTime?         @default(now()) @db.Timestamp(6)
  category_id     Int
  carts           carts[]
  order_items     order_items[]
  product_variant product_variant[]
  categories      categories        @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum delivery_status_enum {
  PLACED
  SHIPPING
  DELIVERD
}
